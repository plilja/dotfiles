call plug#begin('~/.vim/plugged')

" Plug 'valloric/youcompleteme'
" Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'easymotion/vim-easymotion'
Plug 'ervandew/supertab'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-surround'
Plug 'chaoren/vim-wordmotion'
Plug 'mileszs/ack.vim'
Plug 'morhetz/gruvbox'
Plug 'plilja/wombat256.vim'
"Plug 'scrooloose/syntastic'

call plug#end() 

set t_Co=256 " 256 color terminal

syntax on
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set autoindent
set number
set relativenumber

set termguicolors
set background=dark
colorscheme gruvbox
filetype indent plugin on

" Switch colon and semicolon
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

imap jj <Esc>

let mapleader = "\<Space>"

set clipboard=unnamed " Os x clipboard when yanking

noremap Q <NOP> " Disable Ex mode

" Search settings 
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <cr> :noh<cr> " Escape from search highlighting
nnoremap ` %
vnoremap ` %

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" $/^ doesn't do anything
nnoremap $ <nop>
nnoremap ^ <nop>

" Move between splits with ctrl+hjkl (i.e no w)
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

set backspace=indent,eol,start

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
let g:ycm_confirm_extra_conf = 0 " Load settings files for youcompleteme without prompting

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" Open Nerdtree with ctrl-n
nnoremap <C-n> :NERDTreeToggle<cr>
" Close vim if only nerdtree is open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

set completeopt-=preview

" Managing editor tabs
nnoremap tn :tabnew<Space>
nnoremap tk :tabnext<cr>
nnoremap tj :tabprev<cr>
nnoremap th :tabfirst<cr>
nnoremap tl :tablast<cr>

" Leader toggles camel case navigation
let g:wordmotion_prefix = '<Leader>'

" Use silver searcher for Ack if it is available
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
nnoremap <Leader>a :Ack<Space>

" Auto save whenever text is changed
autocmd TextChanged,TextChangedI <buffer> silent write

" Store temp .swp-files in .vim/tmp under home folder
set directory^=$HOME/.vim/swps//
